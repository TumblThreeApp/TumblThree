<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Label">
        <Setter Property="Padding" Value="4,4" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Height" Value="2" />
    </Style>

    <Style
        x:Key="IconButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="37" />
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style
        x:Key="IconToggleButtonStyle"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="ToggleButton">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="37" />
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style
        x:Key="InplaceButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style
        x:Key="CloseButtonStyle"
        BasedOn="{StaticResource InplaceButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE10A;" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#80FFFFFF" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AppBarTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>

    <Style x:Key="TextCellElementStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="4,2,4,3" />
    </Style>

    <Style x:Key="TextCellEditingStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2,2,2,3" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border
                            x:Name="errorBorder"
                            Background="#11FF0000"
                            BorderBrush="#FFCB2E2E"
                            BorderThickness="1"
                            IsHitTestVisible="False" />
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup
                            HorizontalAlignment="Right"
                            AllowsTransparency="True"
                            HorizontalOffset="0"
                            IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}"
                            Placement="Right"
                            PlacementTarget="{Binding ElementName=errorBorder}"
                            PopupAnimation="Fade"
                            VerticalOffset="0">
                            <StackPanel Orientation="Horizontal">
                                <Polygon
                                    VerticalAlignment="Center"
                                    Fill="#FFCB2E2E"
                                    Points="0,4 4,0 4,8"
                                    Stretch="Fill"
                                    Stroke="#FFCB2E2E"
                                    StrokeThickness="2" />
                                <Border
                                    Padding="4"
                                    Background="#FFCB2E2E"
                                    CornerRadius="4">
                                    <TextBlock
                                        Margin="2,0,0,0"
                                        HorizontalAlignment="Center"
                                        FontWeight="Bold"
                                        Foreground="White"
                                        Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="VerticalSeparatorStyle"
        BasedOn="{StaticResource {x:Type Separator}}"
        TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="6,0,6,0" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90" />
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>